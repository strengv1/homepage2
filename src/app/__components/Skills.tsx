"use client"

import Image from 'next/image';
import { JSX, useState } from 'react';
import CodeIcon from '@mui/icons-material/Code'; // Generic code icon
import JavascriptIcon from '@mui/icons-material/Javascript';
import GitHubIcon from '@mui/icons-material/GitHub';
import CssIcon from '@mui/icons-material/Css';

interface Skill {
  name: string;
  icon: JSX.Element;
  description: string;
  examples: string[]; // Array of image URLs or paths
}

export default function Skills() {
  const skills: Skill[] = [
    { name: 'TypeScript', icon: <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="1.5rem" height="1.5rem" viewBox="0,0,256,256">
      <g fill="none" fillRule="nonzero" stroke="none" strokeWidth="1" strokeLinecap="butt" strokeLinejoin="miter" strokeMiterlimit="10" strokeDasharray="" strokeDashoffset="0" fontFamily="none" fontWeight="none" fontSize="none" textAnchor="none"><g transform="scale(5.33333,5.33333)"><rect x="6" y="6" width="36" height="36" fill="#000000"></rect><path d="M27.49,22h-13.263v3.264h4.757v14.736h3.769v-14.736h4.737z" fill="#ffffff"></path><path d="M39.194,26.084c0,0 -1.787,-1.192 -3.807,-1.192c-2.02,0 -2.747,0.96 -2.747,1.986c0,2.648 7.381,2.383 7.381,7.712c0,8.209 -11.254,4.568 -11.254,4.568v-3.938c0,0 2.152,1.622 4.733,1.622c2.581,0 2.483,-1.688 2.483,-1.92c0,-2.449 -7.315,-2.449 -7.315,-7.878c0,-7.381 10.658,-4.469 10.658,-4.469z" fill="#ffffff"></path></g></g>
      </svg>, description: 'Used extensively in frontend and backend development.', examples: []},
    { name: 'JavaScript ', icon: <JavascriptIcon width="1.5rem" height="1.5rem"/>, description: 'Used extensively in frontend and backend development.', examples: [] },
    { name: 'React', icon: <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="1.5rem" height="1.5rem" viewBox="0 0 50 50" ><path d="M 34.564453 3.9765625 C 33.784805 3.9499025 32.968558 4.0848602 32.150391 4.3496094 C 30.514055 4.8791078 28.800795 5.913028 27.041016 7.34375 C 26.347573 7.9075278 25.647447 8.5517926 24.945312 9.2363281 C 24.263704 8.574435 23.583317 7.9501179 22.910156 7.4023438 C 21.1517 5.9714272 19.439452 4.9382375 17.806641 4.4082031 C 16.990235 4.1431859 16.17716 4.0057926 15.400391 4.03125 C 14.623622 4.056707 13.884159 4.2441704 13.216797 4.6289062 C 13.216267 4.629175 13.213291 4.6306794 13.212891 4.6308594 C 13.21216 4.6312308 13.205078 4.6347556 13.205078 4.6347656 C 13.205062 4.634775 13.194728 4.6434605 13.193359 4.6445312 C 11.87114 5.4166971 11.079224 6.8245635 10.722656 8.4941406 C 10.36422 10.172468 10.400658 12.170324 10.759766 14.408203 C 10.903583 15.30444 11.114042 16.248433 11.361328 17.214844 C 10.565578 17.453413 9.794005 17.705532 9.0800781 17.984375 C 7.0079817 18.793688 5.2934468 19.761913 4.0449219 20.914062 C 2.7963969 22.066212 1.9902344 23.464554 1.9902344 25 C 1.9902344 26.535446 2.7963969 27.933787 4.0449219 29.085938 C 5.2934468 30.238087 7.0079817 31.206312 9.0800781 32.015625 C 9.7852165 32.291036 10.547018 32.539249 11.332031 32.775391 C 11.08408 33.742943 10.872971 34.688439 10.728516 35.585938 C 10.367905 37.8264 10.327615 39.82647 10.685547 41.509766 C 11.04348 43.193061 11.843313 44.615102 13.183594 45.390625 C 14.523623 46.166191 16.152786 46.150573 17.789062 45.621094 C 19.425341 45.091615 21.138601 44.059557 22.898438 42.628906 C 23.5855 42.070362 24.280909 41.433283 24.976562 40.755859 C 25.670427 41.431451 26.363722 42.067526 27.048828 42.625 C 28.807352 44.055919 30.517443 45.087159 32.150391 45.617188 C 33.781115 46.146493 35.402437 46.164648 36.736328 45.398438 C 36.736328 45.398438 36.738281 45.396484 36.738281 45.396484 C 36.739781 45.39567 36.740787 45.39728 36.742188 45.396484 L 36.746094 45.394531 C 36.746094 45.394531 36.748047 45.392578 36.748047 45.392578 L 36.751953 45.390625 L 36.775391 45.376953 L 36.857422 45.330078 L 36.890625 45.294922 C 38.134601 44.508047 38.891662 43.147057 39.236328 41.533203 C 39.594764 39.854876 39.556371 37.85702 39.197266 35.619141 C 39.052761 34.718621 38.840755 33.770158 38.591797 32.798828 C 39.404581 32.556445 40.192089 32.2999 40.919922 32.015625 C 42.992018 31.206312 44.706553 30.238087 45.955078 29.085938 C 47.203603 27.933788 48.009766 26.535446 48.009766 25 C 48.009766 23.464554 47.203603 22.066213 45.955078 20.914062 C 44.706553 19.761913 42.992018 18.793688 40.919922 17.984375 C 40.195605 17.701473 39.411988 17.4465 38.603516 17.205078 C 38.852874 16.233897 39.065975 15.285416 39.210938 14.384766 C 39.571548 12.144303 39.611837 10.144233 39.253906 8.4609375 C 38.896026 6.7775947 38.09614 5.3556007 36.755859 4.5800781 C 36.085753 4.1923363 35.344101 4.0032229 34.564453 3.9765625 z M 34.470703 6.0097656 C 34.959672 6.0236126 35.377482 6.1411481 35.734375 6.3476562 C 36.448094 6.7606338 36.974855 7.5632489 37.255859 8.8847656 C 37.536864 10.206282 37.528456 11.990759 37.195312 14.060547 C 37.062192 14.887622 36.864588 15.770905 36.630859 16.679688 C 34.701845 16.220706 32.599462 15.874326 30.365234 15.660156 C 29.066839 13.82361 27.72374 12.160821 26.371094 10.699219 C 27.032289 10.053327 27.689073 9.4488796 28.330078 8.9277344 C 29.955549 7.6062064 31.495445 6.710361 32.779297 6.2949219 C 33.421223 6.0872023 33.981734 5.9959183 34.470703 6.0097656 z M 15.490234 6.0234375 C 15.982704 6.0101135 16.545281 6.1014395 17.189453 6.3105469 C 18.477798 6.7287625 20.021269 7.6290416 21.648438 8.953125 C 22.270986 9.4597147 22.907401 10.045837 23.548828 10.669922 C 22.187983 12.142398 20.838331 13.818645 19.533203 15.669922 C 17.308155 15.887573 15.214777 16.236484 13.294922 16.697266 C 13.062989 15.792357 12.866576 14.913692 12.734375 14.089844 C 12.402107 12.019223 12.395014 10.233954 12.677734 8.9101562 C 12.960455 7.5863586 13.490189 6.780747 14.210938 6.3652344 L 14.214844 6.3632812 C 14.575231 6.1555171 14.997765 6.0367613 15.490234 6.0234375 z M 24.976562 12.138672 C 25.904382 13.148338 26.834751 14.25861 27.751953 15.470703 C 26.847876 15.427613 25.93357 15.398437 25 15.398438 C 24.050175 15.398438 23.120414 15.428072 22.201172 15.472656 C 23.118521 14.25909 24.048491 13.149727 24.976562 12.138672 z M 25 17.416016 C 26.46323 17.416016 27.89109 17.476959 29.271484 17.585938 C 30.056222 18.736362 30.823632 19.947572 31.558594 21.220703 C 32.283275 22.476026 32.940111 23.729083 33.537109 24.966797 C 32.93231 26.223832 32.263831 27.49624 31.527344 28.771484 C 31.523552 28.777937 31.521219 28.782744 31.517578 28.789062 C 30.783614 30.059821 30.018098 31.26984 29.234375 32.417969 C 27.865338 32.525081 26.450283 32.583984 25 32.583984 C 23.514342 32.583984 22.064089 32.522402 20.664062 32.410156 C 19.886529 31.269031 19.126816 30.068368 18.398438 28.806641 C 17.665416 27.536871 17.000796 26.269329 16.398438 25.017578 C 17.002327 23.761435 17.668829 22.489253 18.404297 21.214844 C 18.404297 21.214844 18.40625 21.212891 18.40625 21.212891 C 18.39655 21.229171 18.393913 21.232819 18.414062 21.199219 L 18.417969 21.191406 L 18.421875 21.183594 C 19.148971 19.92461 19.907547 18.726683 20.683594 17.587891 C 22.077663 17.476642 23.521154 17.416016 25 17.416016 z M 31.847656 17.859375 C 33.341097 18.055329 34.752738 18.31343 36.072266 18.623047 C 35.665671 19.907982 35.177735 21.244321 34.597656 22.617188 C 34.184391 21.820544 33.753431 21.021717 33.291016 20.220703 C 32.821887 19.408108 32.338138 18.625961 31.847656 17.859375 z M 18.050781 17.873047 C 17.576437 18.616559 17.108604 19.375467 16.654297 20.162109 C 16.654297 20.162109 16.652344 20.164062 16.652344 20.164062 L 16.648438 20.169922 L 16.642578 20.177734 C 16.172365 20.99192 15.735882 21.803574 15.316406 22.613281 C 14.741624 21.24861 14.254756 19.920057 13.851562 18.642578 C 15.162627 18.332038 16.566099 18.071113 18.050781 17.873047 z M 38.050781 19.148438 C 38.801062 19.372369 39.524617 19.60709 40.185547 19.865234 C 42.0957 20.611296 43.60665 21.494743 44.585938 22.398438 C 45.565224 23.302132 45.990234 24.163946 45.990234 25 C 45.990234 25.836054 45.565225 26.697869 44.585938 27.601562 C 43.60665 28.505257 42.0957 29.388704 40.185547 30.134766 C 39.521171 30.394255 38.793695 30.630561 38.039062 30.855469 C 37.452864 28.981798 36.691812 27.020106 35.765625 25.011719 C 36.696504 22.996343 37.461712 21.028893 38.050781 19.148438 z M 11.914062 19.158203 C 12.495876 21.020111 13.250167 22.969318 14.167969 24.964844 C 13.236843 26.982272 12.473289 28.951917 11.884766 30.833984 C 11.157959 30.615374 10.456739 30.385627 9.8144531 30.134766 C 7.9042995 29.388704 6.39335 28.505257 5.4140625 27.601562 C 4.434775 26.697868 4.0097656 25.836054 4.0097656 25 C 4.0097656 24.163946 4.434775 23.302132 5.4140625 22.398438 C 6.39335 21.494743 7.9042995 20.611296 9.8144531 19.865234 C 10.4652 19.611068 11.176619 19.379236 11.914062 19.158203 z M 25 20 C 22.250484 20 20 22.250484 20 25 C 20 27.749516 22.250484 30 25 30 C 27.749516 30 30 27.749516 30 25 C 30 22.250484 27.749516 20 25 20 z M 25 22 C 26.668484 22 28 23.331516 28 25 C 28 26.668484 26.668484 28 25 28 C 23.331516 28 22 26.668484 22 25 C 22 23.331516 23.331516 22 25 22 z M 34.619141 27.359375 C 35.201814 28.73802 35.693798 30.07902 36.101562 31.369141 C 34.777717 31.680901 33.360853 31.941476 31.861328 32.138672 C 32.336807 31.39468 32.806274 30.6348 33.261719 29.847656 C 33.267219 29.838256 33.273837 29.831706 33.279297 29.822266 L 33.287109 29.810547 L 33.296875 29.792969 C 33.298875 29.789469 33.300734 29.786703 33.302734 29.783203 L 33.316406 29.755859 C 33.778061 28.955197 34.206463 28.15567 34.619141 27.359375 z M 15.337891 27.369141 C 15.757452 28.179485 16.195573 28.99172 16.666016 29.806641 C 17.127309 30.605711 17.601937 31.376251 18.083984 32.130859 C 16.591537 31.932828 15.180792 31.672936 13.863281 31.361328 C 14.269201 30.076519 14.758398 28.742086 15.337891 27.369141 z M 13.306641 33.306641 C 15.233399 33.768434 17.334823 34.117022 19.568359 34.333984 C 20.862868 36.167623 22.20167 37.827822 23.550781 39.289062 C 22.895654 39.927967 22.244631 40.526541 21.609375 41.042969 C 19.983836 42.364443 18.443972 43.262307 17.160156 43.677734 C 15.87634 44.093161 14.920502 44.035984 14.207031 43.623047 C 13.493312 43.210069 12.966552 42.407454 12.685547 41.085938 C 12.404542 39.76442 12.412951 37.979944 12.746094 35.910156 C 12.878457 35.087784 13.074834 34.209872 13.306641 33.306641 z M 36.658203 33.314453 C 36.891825 34.224225 37.089781 35.107495 37.222656 35.935547 C 37.554924 38.006167 37.563974 39.791437 37.28125 41.115234 C 36.99853 42.439032 36.466842 43.246597 35.746094 43.662109 C 35.746094 43.662109 35.744141 43.664062 35.744141 43.664062 C 35.744141 43.664062 35.742188 43.664062 35.742188 43.664062 C 35.021279 44.078849 34.055146 44.132769 32.767578 43.714844 C 31.479187 43.296577 29.937773 42.396347 28.310547 41.072266 C 27.676276 40.556157 27.026896 39.958161 26.373047 39.320312 C 27.730088 37.853131 29.076813 36.183931 30.378906 34.339844 C 32.618593 34.124566 34.725711 33.775728 36.658203 33.314453 z M 22.183594 34.525391 C 23.10854 34.570544 24.044054 34.601562 25 34.601562 C 25.919342 34.601562 26.820152 34.573053 27.710938 34.53125 C 26.796771 35.738242 25.87181 36.843787 24.947266 37.849609 C 24.022889 36.841555 23.097063 35.733913 22.183594 34.525391 z"></path></svg>,
      description: 'Most of my projects are done with React.', examples: [] },
    { name: 'Delphi', icon: <CodeIcon />, description: 'Got familiar with Delphi while working at Polycon, so used professionally for three years.', examples: [] },
    { name: 'Python', icon: <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="1.5rem" height="1.5rem" viewBox="0 0 50 50"><path d="M 25 2 C 20.941406 2 18.1875 2.96875 16.4375 4.375 C 14.6875 5.78125 14 7.589844 14 9.09375 L 14 14 L 24 14 L 24 15 L 9.09375 15 C 7.265625 15 5.410156 15.792969 4.09375 17.46875 C 2.777344 19.144531 2 21.644531 2 25 C 2 28.355469 2.777344 30.855469 4.09375 32.53125 C 5.410156 34.207031 7.265625 35 9.09375 35 L 14 35 L 14 40.90625 C 14 42.410156 14.6875 44.21875 16.4375 45.625 C 18.1875 47.03125 20.941406 48 25 48 C 29.058594 48 31.8125 47.03125 33.5625 45.625 C 35.3125 44.21875 36 42.410156 36 40.90625 L 36 36 L 26 36 L 26 35 L 40.90625 35 C 42.734375 35 44.589844 34.207031 45.90625 32.53125 C 47.222656 30.855469 48 28.355469 48 25 C 48 21.644531 47.222656 19.144531 45.90625 17.46875 C 44.589844 15.792969 42.734375 15 40.90625 15 L 36 15 L 36 9.09375 C 36 7.550781 35.316406 5.738281 33.5625 4.34375 C 31.808594 2.949219 29.054688 2 25 2 Z M 25 4 C 28.746094 4 31.015625 4.875 32.3125 5.90625 C 33.609375 6.9375 34 8.136719 34 9.09375 L 34 21 C 34 22.65625 32.65625 24 31 24 L 19 24 C 16.941406 24 15.167969 25.269531 14.40625 27.0625 C 14.277344 27.359375 14.160156 27.675781 14.09375 28 C 14.027344 28.324219 14 28.65625 14 29 L 14 33 L 9.09375 33 C 7.824219 33 6.648438 32.503906 5.6875 31.28125 C 4.726563 30.058594 4 28.042969 4 25 C 4 21.957031 4.726563 19.941406 5.6875 18.71875 C 6.648438 17.496094 7.824219 17 9.09375 17 L 26 17 L 26 12 L 16 12 L 16 9.09375 C 16 8.199219 16.386719 6.980469 17.6875 5.9375 C 18.988281 4.894531 21.257813 4 25 4 Z M 20 7 C 18.898438 7 18 7.898438 18 9 C 18 10.101563 18.898438 11 20 11 C 21.101563 11 22 10.101563 22 9 C 22 7.898438 21.101563 7 20 7 Z M 36 17 L 40.90625 17 C 42.175781 17 43.351563 17.496094 44.3125 18.71875 C 45.273438 19.941406 46 21.957031 46 25 C 46 28.042969 45.273438 30.058594 44.3125 31.28125 C 43.351563 32.503906 42.175781 33 40.90625 33 L 24 33 L 24 38 L 34 38 L 34 40.90625 C 34 41.800781 33.613281 43.019531 32.3125 44.0625 C 31.011719 45.105469 28.742188 46 25 46 C 21.257813 46 18.988281 45.105469 17.6875 44.0625 C 16.386719 43.019531 16 41.800781 16 40.90625 L 16 29 C 16 28.792969 16.023438 28.601563 16.0625 28.40625 C 16.34375 27.039063 17.550781 26 19 26 L 31 26 C 33.746094 26 36 23.746094 36 21 Z M 30 39 C 28.898438 39 28 39.898438 28 41 C 28 42.101563 28.898438 43 30 43 C 31.101563 43 32 42.101563 32 41 C 32 39.898438 31.101563 39 30 39 Z"></path></svg>,
      description: `We use a Flask backend for our startup. I've also built a few telegram bots and miscellaneous programs along the years.`, examples: [] },
    { name: 'Spring Boot', icon:<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="1.5rem" height="1.5rem" viewBox="0,0,256,256"><g fill="none" fillRule="nonzero" stroke="none" strokeWidth="1" strokeLinecap="butt" strokeLinejoin="miter" strokeMiterlimit="10" strokeDasharray="" strokeDashoffset="0" fontFamily="none" fontWeight="none" fontSize="none" textAnchor="none"><g transform="scale(5.33333,5.33333)"><path d="M43.982,23.635c0.069,-4.261 -0.891,-9.328 -2.891,-15.273l-1.568,-4.662l-2.13,4.433c-0.114,0.237 -0.244,0.469 -0.38,0.698c-3.499,-3.004 -8.039,-4.831 -13.013,-4.831c-11.046,0 -20,8.954 -20,20c0,11.046 8.954,20 20,20c11.046,0 20,-8.954 20,-20c0,-0.123 -0.016,-0.242 -0.018,-0.365z" fill="#000000"></path><path d="M39.385,32.558c-3.123,4.302 -8.651,4.533 -13.854,4.442h-6.781h-1.938c4.428,-1.593 7.063,-1.972 9.754,-3.4c5.068,-2.665 10.078,-8.496 11.121,-14.562c-1.93,5.836 -7.779,10.85 -13.109,12.889c-3.652,1.393 -10.248,2.745 -10.248,2.745l-0.267,-0.145c-4.49,-2.259 -4.626,-12.313 3.537,-15.559c3.574,-1.423 6.993,-0.641 10.854,-1.593c4.122,-1.012 8.89,-4.208 10.83,-8.375c2.172,6.667 4.786,17.106 0.101,23.558zM15.668,38.445c-0.282,0.35 -0.713,0.555 -1.163,0.555c-0.823,0 -1.495,-0.677 -1.495,-1.5c0,-0.823 0.677,-1.5 1.495,-1.5c0.341,0 0.677,0.118 0.941,0.336c0.64,0.519 0.74,1.469 0.222,2.109z" fill="#ffffff"></path></g></g></svg>,
      description: `Used for the backed on my Master's thesis project.`, examples: [] },
    { name: 'Node.js', icon: <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="1.5rem" height="1.5rem" viewBox="0,0,256,256">
      <g fill="none" fillRule="nonzero" stroke="none" strokeWidth="1" strokeLinecap="butt" strokeLinejoin="miter" strokeMiterlimit="10" strokeDasharray="" strokeDashoffset="0" fontFamily="none" fontWeight="none" fontSize="none" textAnchor="none"><g transform="scale(5.33333,5.33333)"><path d="M17.204,19.122l-4.907,2.715c-0.184,0.101 -0.297,0.289 -0.297,0.492v5.433c0,0.203 0.113,0.39 0.297,0.492l4.908,2.717c0.183,0.101 0.41,0.101 0.593,0l4.907,-2.717c0.182,-0.102 0.295,-0.289 0.295,-0.492v-5.433c0,-0.203 -0.113,-0.39 -0.297,-0.492l-4.906,-2.715c-0.092,-0.051 -0.195,-0.076 -0.297,-0.076c-0.103,0 -0.205,0.025 -0.297,0.076M42.451,24.013l-0.818,0.452c-0.031,0.017 -0.049,0.048 -0.049,0.082v0.906c0,0.034 0.019,0.065 0.049,0.082l0.818,0.453c0.031,0.017 0.068,0.017 0.099,0l0.818,-0.453c0.03,-0.017 0.049,-0.048 0.049,-0.082v-0.906c0,-0.034 -0.019,-0.065 -0.05,-0.082l-0.818,-0.452c-0.015,-0.009 -0.032,-0.013 -0.049,-0.013c-0.017,0 -0.034,0.004 -0.049,0.013" fill="#000000"></path><path d="M35.751,13.364l-2.389,-1.333c-0.075,-0.042 -0.167,-0.041 -0.241,0.003c-0.074,0.044 -0.12,0.123 -0.12,0.209l-0.001,8.052l-2.203,-1.219c-0.092,-0.051 -0.195,-0.076 -0.297,-0.076c-0.102,0 -0.205,0.025 -0.297,0.076h0.001l-4.907,2.715c-0.184,0.101 -0.297,0.289 -0.297,0.491v5.433c0,0.203 0.113,0.39 0.297,0.492l4.908,2.717c0.183,0.101 0.41,0.101 0.593,0l4.907,-2.717c0.182,-0.101 0.295,-0.289 0.295,-0.492v-13.927c0,-0.176 -0.096,-0.338 -0.249,-0.424zM32.866,26.458l-2.23,1.235c-0.083,0.046 -0.186,0.046 -0.269,0l-2.231,-1.235c-0.085,-0.046 -0.136,-0.132 -0.136,-0.224v-2.47c0,-0.092 0.051,-0.177 0.135,-0.224l2.231,-1.234h-0.001c0.042,-0.023 0.088,-0.034 0.135,-0.034c0.047,0 0.093,0.012 0.135,0.034l2.23,1.234c0.084,0.047 0.135,0.133 0.135,0.225v2.47c0,0.091 -0.051,0.177 -0.134,0.223z" fill="#37474f"></path><path d="M17.204,19.122l-5.204,8.64c0,0.203 0.113,0.39 0.297,0.492l4.908,2.717c0.183,0.101 0.41,0.101 0.593,0l5.202,-8.642c0,-0.203 -0.113,-0.39 -0.297,-0.492l-4.906,-2.715c-0.092,-0.051 -0.195,-0.076 -0.297,-0.076c-0.103,0 -0.205,0.025 -0.297,0.076" fill="#2e7d32"></path><path d="M17.204,19.122l-4.907,2.715c-0.184,0.101 -0.297,0.289 -0.297,0.492l5.204,8.642c0.183,0.101 0.41,0.101 0.593,0l4.907,-2.717c0.183,-0.102 0.296,-0.289 0.296,-0.492l-5.203,-8.64c-0.092,-0.051 -0.195,-0.076 -0.297,-0.076c-0.103,0 -0.205,0.025 -0.297,0.076" fill="#4caf50"></path><path d="M47.703,21.791l-4.906,-2.715c-0.092,-0.051 -0.195,-0.076 -0.297,-0.076c-0.102,0 -0.205,0.025 -0.297,0.076h0.001l-4.907,2.715c-0.183,0.101 -0.297,0.293 -0.297,0.503v5.411c0,0.209 0.114,0.402 0.297,0.503l4.908,2.717c0.184,0.102 0.409,0.102 0.593,0l2.263,-1.253c0.207,-0.115 0.206,-0.412 -0.002,-0.526l-4.924,-2.687c-0.083,-0.047 -0.135,-0.134 -0.135,-0.228v-2.466c0,-0.092 0.05,-0.177 0.13,-0.221l2.235,-1.236h-0.001c0.042,-0.023 0.088,-0.034 0.135,-0.034c0.047,0 0.093,0.012 0.135,0.034l2.235,1.237c0.08,0.044 0.13,0.129 0.13,0.221v2.012c0,0.086 0.046,0.166 0.121,0.209c0.075,0.042 0.167,0.042 0.242,-0.001l2.398,-1.393c0.148,-0.086 0.24,-0.245 0.24,-0.417v-1.88c0,-0.211 -0.114,-0.404 -0.297,-0.505zM10.703,21.791l-4.906,-2.715c-0.092,-0.051 -0.195,-0.076 -0.297,-0.076c-0.102,0 -0.205,0.025 -0.297,0.076h0.001l-4.907,2.715c-0.183,0.101 -0.297,0.293 -0.297,0.503v7.465c0,0.086 0.046,0.166 0.121,0.209c0.075,0.042 0.167,0.042 0.242,-0.001l2.398,-1.393c0.148,-0.086 0.239,-0.245 0.239,-0.417v-4.393c0,-0.092 0.05,-0.177 0.13,-0.221l2.235,-1.236v0c0.042,-0.023 0.088,-0.034 0.135,-0.034c0.047,0 0.093,0.012 0.135,0.034l2.235,1.237c0.08,0.044 0.13,0.129 0.13,0.221v4.393c0,0.172 0.091,0.331 0.24,0.417l2.398,1.393c0.075,0.043 0.167,0.043 0.242,0.001c0.074,-0.044 0.12,-0.124 0.12,-0.21v-7.464c0,-0.21 -0.114,-0.403 -0.297,-0.504z" fill="#37474f"></path></g></g>
      </svg>,
      description: `Used here and there, majorly during the course Full Stack Open.`, examples: [] },
    { name: 'Docker', icon: <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="1.5rem" height="1.5rem" viewBox="0 0 48 48">
      <path fill="#03A9F4" d="M40,20c0.391-1.735-0.092-3.78-2.5-6c-3.914,3.543-2.795,7.227-1.5,9c0,0-0.166,1-4,1S2,24,2,24S0.167,40,18,40c15.593,0,19.973-12.003,20.828-15.076C39.182,24.972,39.579,25.003,40,25c2.147-0.017,4.93-1.171,6-5.484C43.162,18.533,41.339,18.978,40,20z"></path><path fill="#0288D1" d="M2.165,28C2.9,32.739,5.983,40,18,40c12.185,0,17.523-7.33,19.682-12H2.165z"></path><path fill="#81D4FA" d="M19.812,39.938C18.892,39.616,14.74,38.848,14,33c-4.209,1.863-7.938,1.375-9.579,1.008C6.583,37.237,10.591,40,18,40C18.623,40,19.224,39.976,19.812,39.938z"></path><path fill="#FFF" d="M18 30A2 2 0 1 0 18 34A2 2 0 1 0 18 30Z"></path><path fill="#37474F" d="M14.914,33.597c0.224,0.505,0.02,1.162-0.51,1.318c-3.301,0.973-6.146,1.102-8.297,1.102c-0.644-0.619-1.194-1.279-1.656-1.963c2.585,0,6.71-0.12,9.144-0.966C14.117,32.906,14.69,33.09,14.914,33.597z M2,27c0,0,1.875,0.125,3-1c1.875,1.688,5.94,1.088,7,0c1.063,1.688,6.938,1.375,8,0c1.25,1.438,6.625,1.75,8,0c0.479,1.461,6.819,1.874,8,0c1.061,1.088,5.063,1.938,7.311,0C43.875,27.188,46,27,46,27v1H2 M17,32c0,0.552,0.448,1,1,1s1-0.448,1-1s-0.448-1-1-1S17,31.448,17,32z"></path><path fill="#01579B" d="M11,24H6v-5h5V24z M21,19h-5v5h5V19z M31,19h-5v5h5V19z M16,14h-5v5h5V14z M26,14h-5v5h5V14z"></path><path fill="#0288D1" d="M16,24h-5v-5h5V24z M26,19h-5v5h5V19z M26,9h-5v5h5V9z M21,14h-5v5h5V14z"></path>
      </svg>,
      description: 'Containerized applications for development and deployment.', examples: [] },
    { name: 'Next.js', icon: <svg width="1.5rem" height="1.5rem" viewBox="0 0 256 256" preserveAspectRatio="xMidYMid">
      <g><path d="M119.616813,0.0688905149 C119.066276,0.118932037 117.314565,0.294077364 115.738025,0.419181169 C79.3775171,3.69690087 45.3192571,23.3131775 23.7481916,53.4631946 C11.7364614,70.2271045 4.05395894,89.2428829 1.15112414,109.384595 C0.12512219,116.415429 0,118.492153 0,128.025062 C0,137.557972 0.12512219,139.634696 1.15112414,146.665529 C8.10791789,194.730411 42.3163245,235.11392 88.7116325,250.076335 C97.0197458,252.753556 105.778299,254.580072 115.738025,255.680985 C119.616813,256.106338 136.383187,256.106338 140.261975,255.680985 C157.453763,253.779407 172.017986,249.525878 186.382014,242.194795 C188.584164,241.068861 189.00958,240.768612 188.709286,240.518404 C188.509091,240.36828 179.124927,227.782837 167.86393,212.570214 L147.393939,184.922273 L121.743891,146.965779 C107.630108,126.098464 96.0187683,109.034305 95.9186706,109.034305 C95.8185728,109.009284 95.7184751,125.873277 95.6684262,146.465363 C95.5933529,182.52028 95.5683284,183.971484 95.1178886,184.82219 C94.4672532,186.048207 93.9667644,186.548623 92.915738,187.099079 C92.114956,187.499411 91.4142717,187.574474 87.6355816,187.574474 L83.3063539,187.574474 L82.1552297,186.848872 C81.4044966,186.373477 80.8539589,185.747958 80.4785924,185.022356 L79.9530792,183.896422 L80.0031281,133.729796 L80.0782014,83.5381493 L80.8539589,82.5623397 C81.25435,82.0369037 82.1051808,81.3613431 82.7057674,81.0360732 C83.7317693,80.535658 84.1321603,80.4856165 88.4613881,80.4856165 C93.5663734,80.4856165 94.4172043,80.6857826 95.7434995,82.1369867 C96.1188661,82.5373189 110.007429,103.454675 126.623656,128.650581 C143.239883,153.846488 165.962072,188.250034 177.122972,205.139048 L197.392766,235.839522 L198.418768,235.163961 C207.502639,229.259062 217.112023,220.852086 224.719453,212.09482 C240.910264,193.504394 251.345455,170.835585 254.848876,146.665529 C255.874878,139.634696 256,137.557972 256,128.025062 C256,118.492153 255.874878,116.415429 254.848876,109.384595 C247.892082,61.3197135 213.683675,20.9362052 167.288368,5.97379012 C159.105376,3.32158945 150.396872,1.49507389 140.637341,0.394160408 C138.234995,0.143952798 121.693842,-0.131275573 119.616813,0.0688905149 L119.616813,0.0688905149 Z M172.017986,77.4831252 C173.219159,78.0836234 174.195112,79.2345784 174.545455,80.435575 C174.74565,81.0861148 174.795699,94.9976579 174.74565,126.348671 L174.670577,171.336 L166.73783,159.17591 L158.780059,147.01582 L158.780059,114.313685 C158.780059,93.1711423 158.880156,81.2862808 159.030303,80.7108033 C159.430694,79.3096407 160.306549,78.2087272 161.507722,77.5581875 C162.533724,77.0327515 162.909091,76.98271 166.837928,76.98271 C170.541544,76.98271 171.19218,77.0327515 172.017986,77.4831252 Z" fill="#000000"></path></g></svg>,
      description: 'Starting to use NextJS over React due to extra features. Still learning.', examples: [] },
    { name: 'CSS', icon: <CssIcon />, description: 'Used mostly pure CSS while working at Polycon. I consider myself experienced with CSS, but still use Google when centering an element and flexbox fails me.', examples: [] },
    { name: 'Tailwind CSS', icon: <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="1.5rem" height="1.5rem" viewBox="0 0 48 48">
      <path fill="#00acc1" d="M24,9.604c-6.4,0-10.4,3.199-12,9.597c2.4-3.199,5.2-4.398,8.4-3.599 c1.826,0.456,3.131,1.781,4.576,3.247C27.328,21.236,30.051,24,36,24c6.4,0,10.4-3.199,12-9.598c-2.4,3.199-5.2,4.399-8.4,3.6 c-1.825-0.456-3.13-1.781-4.575-3.247C32.672,12.367,29.948,9.604,24,9.604L24,9.604z M12,24c-6.4,0-10.4,3.199-12,9.598 c2.4-3.199,5.2-4.399,8.4-3.599c1.825,0.457,3.13,1.781,4.575,3.246c2.353,2.388,5.077,5.152,11.025,5.152 c6.4,0,10.4-3.199,12-9.598c-2.4,3.199-5.2,4.399-8.4,3.599c-1.826-0.456-3.131-1.781-4.576-3.246C20.672,26.764,17.949,24,12,24 L12,24z"></path>
      </svg>,
      description: 'Started using Tailwind as it comes recommended with NextJS projects. It is very quick and easy but I often use Google/Chatgpt to figure out the keywords.', examples: [] },
    { name: 'Git', icon: <GitHubIcon />, description: 'Version control and collaboration in various projects.', examples: [] },
  ];

  const [modalContent, setModalContent] = useState<Skill | null>(null);

  const openModal = (skill: Skill) => {
    setModalContent(skill);
  };

  const closeModal = () => {
    setModalContent(null);
  };

  return (
    <section id="skills" className="bg-gray-100 py-16 border-b-gray-300 border-b">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 className="text-3xl font-extrabold text-gray-900">Skills</h2>
        <div className="mt-6 grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4">
          {skills.map((skill) => (
            <div
              key={skill.name}
              className="bg-white px-4 py-2 border-gray-300 border rounded-md shadow-md text-center text-gray-800 cursor-pointer hover:bg-gray-200"
              onClick={() => openModal(skill)}
            >
              <div className="flex items-center justify-center space-x-2">
                {skill.icon}
                <span>{skill.name}</span>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Modal */}
      {modalContent && (
        <div
          className="fixed inset-0 z-50 flex items-center justify-center bg-gray-800 bg-opacity-75"
          onClick={closeModal} // Close modal on overlay click
        >
          <div
            className="bg-white rounded-lg shadow-lg p-6 max-w-md w-full relative"
            onClick={(e) => e.stopPropagation()} // Prevent click propagation from modal
          >
            <button
              className="absolute top-2 right-2 text-gray-500 hover:text-gray-800"
              onClick={closeModal}
            >
              &times;
            </button>
            <h3 className="text-xl font-bold text-gray-900">{modalContent.name}</h3>
            <p className="mt-4 text-gray-600">{modalContent.description}</p>
            {modalContent.examples.length > 0 && (
              <div className="mt-4">
                {modalContent.examples.map((example, index) => (
                  <Image
                    key={index}
                    src={example}
                    alt={`${modalContent.name} example ${index + 1}`}
                    className="w-full rounded-md mt-2"
                  />
                ))}
              </div>
            )}
          </div>
        </div>
      )}
    </section>
  );
}
